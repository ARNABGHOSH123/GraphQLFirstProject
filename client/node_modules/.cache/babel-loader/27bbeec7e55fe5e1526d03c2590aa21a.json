{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { __rest } from \"tslib\";\nimport { mergeDeep } from \"../common/mergeDeep.js\";\nexport function concatPagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    merge: function (existing, incoming) {\n      return existing ? __spreadArrays(existing, incoming) : incoming;\n    }\n  };\n}\nexport function offsetLimitPagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    merge: function (existing, incoming, _a) {\n      var args = _a.args;\n      var merged = existing ? existing.slice(0) : [];\n\n      if (args) {\n        var _b = args.offset,\n            offset = _b === void 0 ? 0 : _b;\n\n        for (var i = 0; i < incoming.length; ++i) {\n          merged[offset + i] = incoming[i];\n        }\n      } else {\n        merged.push.apply(merged, incoming);\n      }\n\n      return merged;\n    }\n  };\n}\nexport function relayStylePagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    read: function (existing, _a) {\n      var canRead = _a.canRead,\n          readField = _a.readField;\n      if (!existing) return;\n      var edges = [];\n      var startCursor = \"\";\n      var endCursor = \"\";\n      existing.edges.forEach(function (edge) {\n        if (canRead(readField(\"node\", edge))) {\n          edges.push(edge);\n\n          if (edge.cursor) {\n            startCursor = startCursor || edge.cursor;\n            endCursor = edge.cursor;\n          }\n        }\n      });\n      return __assign(__assign({}, getExtras(existing)), {\n        edges: edges,\n        pageInfo: __assign(__assign({}, existing.pageInfo), {\n          startCursor: startCursor,\n          endCursor: endCursor\n        })\n      });\n    },\n    merge: function (existing, incoming, _a) {\n      if (existing === void 0) {\n        existing = makeEmptyData();\n      }\n\n      var args = _a.args,\n          isReference = _a.isReference,\n          readField = _a.readField;\n      var incomingEdges = incoming.edges ? incoming.edges.map(function (edge) {\n        if (isReference(edge = __assign({}, edge))) {\n          edge.cursor = readField(\"cursor\", edge);\n        }\n\n        return edge;\n      }) : [];\n\n      if (incoming.pageInfo) {\n        var pageInfo_1 = incoming.pageInfo;\n        var startCursor = pageInfo_1.startCursor,\n            endCursor = pageInfo_1.endCursor;\n        var firstEdge = incomingEdges[0];\n        var lastEdge = incomingEdges[incomingEdges.length - 1];\n\n        if (firstEdge && startCursor) {\n          firstEdge.cursor = startCursor;\n        }\n\n        if (lastEdge && endCursor) {\n          lastEdge.cursor = endCursor;\n        }\n\n        var firstCursor = firstEdge && firstEdge.cursor;\n\n        if (firstCursor && !startCursor) {\n          incoming = mergeDeep(incoming, {\n            pageInfo: {\n              startCursor: firstCursor\n            }\n          });\n        }\n\n        var lastCursor = lastEdge && lastEdge.cursor;\n\n        if (lastCursor && !endCursor) {\n          incoming = mergeDeep(incoming, {\n            pageInfo: {\n              endCursor: lastCursor\n            }\n          });\n        }\n      }\n\n      var prefix = existing.edges;\n      var suffix = [];\n\n      if (args && args.after) {\n        var index = prefix.findIndex(function (edge) {\n          return edge.cursor === args.after;\n        });\n\n        if (index >= 0) {\n          prefix = prefix.slice(0, index + 1);\n        }\n      } else if (args && args.before) {\n        var index = prefix.findIndex(function (edge) {\n          return edge.cursor === args.before;\n        });\n        suffix = index < 0 ? prefix : prefix.slice(index);\n        prefix = [];\n      } else if (incoming.edges) {\n        prefix = [];\n      }\n\n      var edges = __spreadArrays(prefix, incomingEdges, suffix);\n\n      var pageInfo = __assign(__assign({}, incoming.pageInfo), existing.pageInfo);\n\n      if (incoming.pageInfo) {\n        var _b = incoming.pageInfo,\n            hasPreviousPage = _b.hasPreviousPage,\n            hasNextPage = _b.hasNextPage,\n            startCursor = _b.startCursor,\n            endCursor = _b.endCursor;\n\n        if (!prefix.length) {\n          if (void 0 !== hasPreviousPage) pageInfo.hasPreviousPage = hasPreviousPage;\n          if (void 0 !== startCursor) pageInfo.startCursor = startCursor;\n        }\n\n        if (!suffix.length) {\n          if (void 0 !== hasNextPage) pageInfo.hasNextPage = hasNextPage;\n          if (void 0 !== endCursor) pageInfo.endCursor = endCursor;\n        }\n      }\n\n      return __assign(__assign(__assign({}, getExtras(existing)), getExtras(incoming)), {\n        edges: edges,\n        pageInfo: pageInfo\n      });\n    }\n  };\n}\n\nvar getExtras = function (obj) {\n  return __rest(obj, notExtras);\n};\n\nvar notExtras = [\"edges\", \"pageInfo\"];\n\nfunction makeEmptyData() {\n  return {\n    edges: [],\n    pageInfo: {\n      hasPreviousPage: false,\n      hasNextPage: true,\n      startCursor: \"\",\n      endCursor: \"\"\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/utilities/policies/pagination.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { __rest } from \"tslib\";\nimport { mergeDeep } from \"../common/mergeDeep.js\";\nexport function concatPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming) {\n            return existing ? __spreadArrays(existing, incoming) : incoming;\n        },\n    };\n}\nexport function offsetLimitPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming, _a) {\n            var args = _a.args;\n            var merged = existing ? existing.slice(0) : [];\n            if (args) {\n                var _b = args.offset, offset = _b === void 0 ? 0 : _b;\n                for (var i = 0; i < incoming.length; ++i) {\n                    merged[offset + i] = incoming[i];\n                }\n            }\n            else {\n                merged.push.apply(merged, incoming);\n            }\n            return merged;\n        },\n    };\n}\nexport function relayStylePagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        read: function (existing, _a) {\n            var canRead = _a.canRead, readField = _a.readField;\n            if (!existing)\n                return;\n            var edges = [];\n            var startCursor = \"\";\n            var endCursor = \"\";\n            existing.edges.forEach(function (edge) {\n                if (canRead(readField(\"node\", edge))) {\n                    edges.push(edge);\n                    if (edge.cursor) {\n                        startCursor = startCursor || edge.cursor;\n                        endCursor = edge.cursor;\n                    }\n                }\n            });\n            return __assign(__assign({}, getExtras(existing)), { edges: edges, pageInfo: __assign(__assign({}, existing.pageInfo), { startCursor: startCursor,\n                    endCursor: endCursor }) });\n        },\n        merge: function (existing, incoming, _a) {\n            if (existing === void 0) { existing = makeEmptyData(); }\n            var args = _a.args, isReference = _a.isReference, readField = _a.readField;\n            var incomingEdges = incoming.edges ? incoming.edges.map(function (edge) {\n                if (isReference(edge = __assign({}, edge))) {\n                    edge.cursor = readField(\"cursor\", edge);\n                }\n                return edge;\n            }) : [];\n            if (incoming.pageInfo) {\n                var pageInfo_1 = incoming.pageInfo;\n                var startCursor = pageInfo_1.startCursor, endCursor = pageInfo_1.endCursor;\n                var firstEdge = incomingEdges[0];\n                var lastEdge = incomingEdges[incomingEdges.length - 1];\n                if (firstEdge && startCursor) {\n                    firstEdge.cursor = startCursor;\n                }\n                if (lastEdge && endCursor) {\n                    lastEdge.cursor = endCursor;\n                }\n                var firstCursor = firstEdge && firstEdge.cursor;\n                if (firstCursor && !startCursor) {\n                    incoming = mergeDeep(incoming, {\n                        pageInfo: {\n                            startCursor: firstCursor,\n                        },\n                    });\n                }\n                var lastCursor = lastEdge && lastEdge.cursor;\n                if (lastCursor && !endCursor) {\n                    incoming = mergeDeep(incoming, {\n                        pageInfo: {\n                            endCursor: lastCursor,\n                        },\n                    });\n                }\n            }\n            var prefix = existing.edges;\n            var suffix = [];\n            if (args && args.after) {\n                var index = prefix.findIndex(function (edge) { return edge.cursor === args.after; });\n                if (index >= 0) {\n                    prefix = prefix.slice(0, index + 1);\n                }\n            }\n            else if (args && args.before) {\n                var index = prefix.findIndex(function (edge) { return edge.cursor === args.before; });\n                suffix = index < 0 ? prefix : prefix.slice(index);\n                prefix = [];\n            }\n            else if (incoming.edges) {\n                prefix = [];\n            }\n            var edges = __spreadArrays(prefix, incomingEdges, suffix);\n            var pageInfo = __assign(__assign({}, incoming.pageInfo), existing.pageInfo);\n            if (incoming.pageInfo) {\n                var _b = incoming.pageInfo, hasPreviousPage = _b.hasPreviousPage, hasNextPage = _b.hasNextPage, startCursor = _b.startCursor, endCursor = _b.endCursor;\n                if (!prefix.length) {\n                    if (void 0 !== hasPreviousPage)\n                        pageInfo.hasPreviousPage = hasPreviousPage;\n                    if (void 0 !== startCursor)\n                        pageInfo.startCursor = startCursor;\n                }\n                if (!suffix.length) {\n                    if (void 0 !== hasNextPage)\n                        pageInfo.hasNextPage = hasNextPage;\n                    if (void 0 !== endCursor)\n                        pageInfo.endCursor = endCursor;\n                }\n            }\n            return __assign(__assign(__assign({}, getExtras(existing)), getExtras(incoming)), { edges: edges,\n                pageInfo: pageInfo });\n        },\n    };\n}\nvar getExtras = function (obj) { return __rest(obj, notExtras); };\nvar notExtras = [\"edges\", \"pageInfo\"];\nfunction makeEmptyData() {\n    return {\n        edges: [],\n        pageInfo: {\n            hasPreviousPage: false,\n            hasNextPage: true,\n            startCursor: \"\",\n            endCursor: \"\",\n        },\n    };\n}\n//# sourceMappingURL=pagination.js.map"]},"metadata":{},"sourceType":"module"}