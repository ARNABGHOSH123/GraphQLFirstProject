{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\graphql_first_project\\\\client\\\\src\\\\components\\\\BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { getBookDetailsQuery } from '../queries/queries';\n\nfunction BookDetails({\n  bookId\n}) {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBookDetailsQuery, {\n    variables: {\n      id: bookId\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  const displayBookDetails = book => {\n    if (book) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All books by this author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"other-books\",\n          children: book.author.books.map(({\n            name,\n            id\n          }) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"book-details\",\n        children: \"No book selected...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: displayBookDetails(data.book)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookDetails, \"t0z2SrXJDzhl3h6STsA86t9Oe1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["E:/graphql_first_project/client/src/components/BookDetails.js"],"names":["useQuery","getBookDetailsQuery","BookDetails","bookId","loading","error","data","variables","id","message","displayBookDetails","book","name","genre","author","books","map"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,SAAQC,mBAAR,QAAkC,oBAAlC;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA+B;AAAA;;AAC7B,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAAuBN,QAAQ,CAACC,mBAAD,EAAqB;AAACM,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEL;AAAL;AAAZ,GAArB,CAArC;;AACA,MAAGC,OAAH,EAAW;AACT,wBACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAGC,KAAH,EAAS;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,gBACGA,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnC,QAAGA,IAAH,EAAS;AACP,0BACE;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAIF,IAAI,CAACG,MAAL,CAAYF;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBACGD,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,CAAC;AAACJ,YAAAA,IAAD;AAAMJ,YAAAA;AAAN,WAAD,kBACrB;AAAA,sBAAcI;AAAd,aAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdD,MAcM;AACJ,0BACE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAtBD;;AAuBA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cACGE,kBAAkB,CAACJ,IAAI,CAACK,IAAN;AADrB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7CQT,W;UACsBF,Q;;;KADtBE,W;AA+CT,eAAeA,WAAf","sourcesContent":["import {useQuery} from '@apollo/client';\r\nimport {getBookDetailsQuery} from '../queries/queries';\r\n\r\nfunction BookDetails({bookId}) {\r\n  const {loading,error,data} = useQuery(getBookDetailsQuery,{variables: {id: bookId}});\r\n  if(loading){\r\n    return(\r\n      <div id=\"book-details\">\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n  if(error){\r\n    return(\r\n      <div id=\"book-details\">\r\n        {error.message}\r\n      </div>\r\n    )\r\n  }\r\n  const displayBookDetails = (book) => {\r\n    if(book) {\r\n      return (\r\n        <div>\r\n          <h2>{book.name}</h2>\r\n          <p>{book.genre}</p>\r\n          <p>{book.author.name}</p>\r\n          <p>All books by this author:</p>\r\n          <ul className=\"other-books\">\r\n            {book.author.books.map(({name,id})=>(\r\n              <li key={id}>{name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }else {\r\n      return(\r\n        <div id=\"book-details\">\r\n          No book selected...\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div id=\"book-details\">\r\n      {displayBookDetails(data.book)}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default BookDetails;\r\n"]},"metadata":{},"sourceType":"module"}