[{"E:\\graphql_first_project\\client\\src\\App.js":"1","E:\\graphql_first_project\\client\\src\\index.js":"2","E:\\graphql_first_project\\client\\src\\components\\BookList.js":"3","E:\\graphql_first_project\\client\\src\\components\\AddBook.js":"4","E:\\graphql_first_project\\client\\src\\queries\\queries.js":"5","E:\\graphql_first_project\\client\\src\\components\\BookDetails.js":"6"},{"size":500,"mtime":1606325244596,"results":"7","hashOfConfig":"8"},{"size":432,"mtime":1606248209465,"results":"9","hashOfConfig":"8"},{"size":683,"mtime":1606333844947,"results":"10","hashOfConfig":"8"},{"size":1797,"mtime":1606330170350,"results":"11","hashOfConfig":"8"},{"size":785,"mtime":1606334186480,"results":"12","hashOfConfig":"8"},{"size":1126,"mtime":1606337544076,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10dxhuz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\graphql_first_project\\client\\src\\App.js",[],"E:\\graphql_first_project\\client\\src\\index.js",[],["28","29"],"E:\\graphql_first_project\\client\\src\\components\\BookList.js",[],"E:\\graphql_first_project\\client\\src\\components\\AddBook.js",["30"],"import {useQuery,useMutation} from '@apollo/client';\r\nimport React,{useState} from 'react';\r\nimport {getAuthorsQuery,addBookMutation,getBookListQuery} from '../queries/queries';\r\n\r\nfunction DisplayAuthors() {\r\n  const {loading,error,data} = useQuery(getAuthorsQuery);\r\n\r\n  if(loading){\r\n    return (\r\n      <option disabled>Loading Authors..</option>\r\n    );\r\n  }\r\n  if(error){\r\n    return (\r\n      <option disabled>Error..</option>\r\n    );\r\n  }\r\n\r\n  return data.authors.map(author=>(\r\n    <option key={author.id} value={author.id}>{author.name}</option>\r\n  ));\r\n}\r\n\r\nfunction AddBook() {\r\n  const [bookState,setBookState] = useState({name: '',genre: '',authorId: ''});\r\n  const [addBook, {data}] = useMutation(addBookMutation);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    addBook({variables: {name: bookState.name,genre: bookState.genre,authorId: bookState.authorId},\r\n            refetchQueries: [{query: getBookListQuery}]});\r\n  }\r\n  const handleChangeEvent = (e,field) => {\r\n    const newBookState = bookState;\r\n    newBookState[field] = e.target.value;\r\n    setBookState(newBookState);\r\n  }\r\n  return (\r\n    <form id=\"add-book\" onSubmit={submitForm}>\r\n      <div className=\"field\">\r\n        <label>Book name:</label>\r\n        <input type=\"text\" onChange={(e)=>handleChangeEvent(e,'name')}/>\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <label>Genre:</label>\r\n        <input type=\"text\" onChange={(e)=>handleChangeEvent(e,'genre')}/>\r\n      </div>\r\n\r\n      <div className=\"field\">\r\n        <label>Author</label>\r\n        <select onChange={(e)=>handleChangeEvent(e,'authorId')}>\r\n          <option>Select Author</option>\r\n          {DisplayAuthors()}\r\n        </select>\r\n      </div>\r\n\r\n      <button>+</button>\r\n    </form>\r\n\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","E:\\graphql_first_project\\client\\src\\queries\\queries.js",[],"E:\\graphql_first_project\\client\\src\\components\\BookDetails.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":26,"column":20,"nodeType":"37","messageId":"38","endLine":26,"endColumn":24},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]